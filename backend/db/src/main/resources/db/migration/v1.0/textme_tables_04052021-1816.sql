SET timezone = 'ETC/GMT';

CREATE TABLE IF NOT EXISTS message_statuses (
    id          INTEGER         NOT NULL    PRIMARY KEY,
    content     VARCHAR(16)     NOT NULL
);

INSERT INTO message_statuses VALUES (0, 'SENT') ON CONFLICT DO NOTHING ;
INSERT INTO message_statuses VALUES (1, 'RECIEVED') ON CONFLICT DO NOTHING ;
INSERT INTO message_statuses VALUES (2, 'DELETED') ON CONFLICT DO NOTHING ;

CREATE TABLE IF NOT EXISTS app_roles (
    id          INTEGER         NOT NULL    PRIMARY KEY,
    content     VARCHAR(16)     NOT NULL
);

INSERT INTO app_roles VALUES (0, 'ROLE_USER') ON CONFLICT DO NOTHING ;
INSERT INTO app_roles VALUES (1, 'ROLE_MODER') ON CONFLICT DO NOTHING ;
INSERT INTO app_roles VALUES (2, 'ROLE_ADMIN') ON CONFLICT DO NOTHING ;

CREATE TABLE IF NOT EXISTS chat_roles (
    id          INTEGER         NOT NULL    PRIMARY KEY,
    content     VARCHAR(16)     NOT NULL
);

INSERT INTO chat_roles VALUES (0, 'ROLE_OWNER') ON CONFLICT DO NOTHING;
INSERT INTO chat_roles VALUES (1, 'ROLE_ADMIN') ON CONFLICT DO NOTHING;
INSERT INTO chat_roles VALUES (2, 'ROLE_MODER') ON CONFLICT DO NOTHING;
INSERT INTO chat_roles VALUES (3, 'ROLE_MEMBER') ON CONFLICT DO NOTHING;
INSERT INTO chat_roles VALUES (4, 'ROLE_BLOCKED') ON CONFLICT DO NOTHING;


CREATE TABLE IF NOT EXISTS files (
    id          INTEGER         NOT NULL    PRIMARY KEY     GENERATED BY DEFAULT AS IDENTITY,
    url         VARCHAR (128)   NOT NULL,
    path_type   INTEGER         NOT NULL     CHECK(0 <= path_type AND path_type <= 1)
);

CREATE TABLE IF NOT EXISTS tags (
    id          INTEGER         NOT NULL    PRIMARY KEY     GENERATED BY DEFAULT AS IDENTITY,
    content     VARCHAR(64)     NOT NULL,
    CONSTRAINT tag_content_ukey UNIQUE (content)
);

CREATE TABLE IF NOT EXISTS cards (
    id          INTEGER         NOT NULL    PRIMARY KEY     GENERATED BY DEFAULT AS IDENTITY,
    content     VARCHAR(256)    NULL
);

CREATE TABLE IF NOT EXISTS card_tag (
    card_id    INTEGER         NOT NULL,
    tag_id     INTEGER         NOT NULL,
    CONSTRAINT card_tag_pkey PRIMARY KEY (card_id, tag_id),
    CONSTRAINT ct_card_id_fkey FOREIGN KEY (card_id) REFERENCES cards (id),
    CONSTRAINT ct_tag_id_fkey FOREIGN KEY (tag_id) REFERENCES tags (id)
);

CREATE TABLE IF NOT EXISTS messages (
    id          INTEGER         NOT NULL    PRIMARY KEY     GENERATED BY DEFAULT AS IDENTITY,
    date_update TIMESTAMP       NULL,
    date_create TIMESTAMP       NOT NULL    DEFAULT NOW(),
    content     VARCHAR(1024)   NOT NULL,
    status_id   INTEGER         NULL        DEFAULT(0),
    CONSTRAINT mes_status_id_fkey FOREIGN KEY (status_id) REFERENCES message_statuses (id) ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS message_file (
    message_id  INTEGER         NOT NULL,
    file_id     INTEGER         NOT NULL,
    CONSTRAINT message_file_pkey PRIMARY KEY (message_id, file_id),
    CONSTRAINT mf_message_id_fkey FOREIGN KEY (message_id) REFERENCES messages (id) ON DELETE CASCADE,
    CONSTRAINT mf_file_id_fkey FOREIGN KEY (file_id) REFERENCES files (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS chats (
    id          INTEGER         NOT NULL    PRIMARY KEY     GENERATED BY DEFAULT AS IDENTITY,
    title       VARCHAR(128)    NOT NULL,
    date_create TIMESTAMP       NOT NULL    DEFAULT NOW(),
    card_id     INTEGER         NOT NULL,
    image_id    INTEGER         NULL,
    CONSTRAINT chat_card_id_fkey FOREIGN KEY (card_id) REFERENCES cards (id),
    CONSTRAINT chat_image_id_fkey FOREIGN KEY (image_id) REFERENCES files (id) ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS users (
    id          INTEGER         NOT NULL    PRIMARY KEY     GENERATED BY DEFAULT AS IDENTITY,
    nickname    VARCHAR(32)     NOT NULL    UNIQUE,
    email       VARCHAR(128)    NOT NULL    UNIQUE,
    password    VARCHAR(128)    NOT NULL,
    image_id    INTEGER         NULL,
    card_id     INTEGER         NOT NULL,
    CONSTRAINT users_image_id_fkey FOREIGN KEY (image_id) REFERENCES files (id) ON DELETE SET NULL,
    CONSTRAINT users_card_id_fkey FOREIGN KEY (card_id) REFERENCES cards (id),
    CONSTRAINT users_nickname_ukey UNIQUE (nickname),
    CONSTRAINT users_email_ukey UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS inactive_emails (
    email       VARCHAR(128)    NOT NULL    PRIMARY KEY ,
    uuid        VARCHAR(128)    NOT NULL    UNIQUE,
    user_id     INTEGER         NOT NULL,
    CONSTRAINT emails_activated_user_id_fkey FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS blocked_users (
    user_who_id          INTEGER         NOT NULL,
    user_blocked_id      INTEGER         NOT NULL,
    CONSTRAINT blocked_users_pkey PRIMARY KEY (user_who_id, user_blocked_id),
    CONSTRAINT bl_who_id_fkey FOREIGN KEY (user_who_id) REFERENCES users (id) ON DELETE CASCADE,
    CONSTRAINT bl_blocked_id_fkey FOREIGN KEY (user_blocked_id) REFERENCES users (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS banned_users (
    user_who_id     INTEGER         NOT NULL,
    user_banned_id  INTEGER         NOT NULL,
    time_from       TIMESTAMP       NOT NULL    DEFAULT NOW(),
    time_to         TIMESTAMP       NULL,
    CONSTRAINT banned_users_pkey PRIMARY KEY (user_who_id, user_banned_id),
    CONSTRAINT ban_who_id_fkey FOREIGN KEY (user_who_id) REFERENCES users (id) ON DELETE CASCADE,
    CONSTRAINT ban_banned_id_fkey FOREIGN KEY (user_banned_id) REFERENCES users (id) ON DELETE CASCADE,
    CONSTRAINT ban_time_from_fkey UNIQUE (time_from)
);

CREATE TABLE IF NOT EXISTS direct_messages (
    user_from_id    INTEGER         NOT NULL,
    user_to_id      INTEGER         NOT NULL,
    message_id      INTEGER         NOT NULL,
    CONSTRAINT direct_messages_pkey PRIMARY KEY (user_from_id, user_to_id, message_id),
    CONSTRAINT dm_from_id_fkey FOREIGN KEY (user_from_id) REFERENCES users (id) ON DELETE CASCADE,
    CONSTRAINT dm_to_id_fkey FOREIGN KEY (user_to_id) REFERENCES users (id) ON DELETE CASCADE,
    CONSTRAINT dm_message_id_fkey FOREIGN KEY (message_id) REFERENCES messages (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS chat_messages (
    chat_id     INTEGER         NOT NULL,
    user_id     INTEGER         NOT NULL,
    message_id  INTEGER         NOT NULL,
    CONSTRAINT chat_messages_pkey PRIMARY KEY (chat_id, user_id, message_id),
    CONSTRAINT cm_chat_id_fkey FOREIGN KEY (chat_id) REFERENCES chats (id) ON DELETE CASCADE,
    CONSTRAINT cm_user_id_fkey FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE,
    CONSTRAINT cm_message_id_fkey FOREIGN KEY (message_id) REFERENCES messages (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS user_app_role (
    user_id     INTEGER         NOT NULL,
    role_id     INTEGER         NOT NULL,
    CONSTRAINT user_app_role_pkey PRIMARY KEY (user_id, role_id),
    CONSTRAINT uar_user_id_fkey FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE,
    CONSTRAINT uar_role_id_fkey FOREIGN KEY (role_id) REFERENCES app_roles (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS user_chat_role (
    user_id     INTEGER         NOT NULL,
    chat_id     INTEGER         NOT NULL,
    role_id     INTEGER         NOT NULL,
    CONSTRAINT user_chat_role_pkey PRIMARY KEY (user_id, chat_id, role_id),
    CONSTRAINT ucr_user_id_fkey FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE,
    CONSTRAINT ucr_chat_id_fkey FOREIGN KEY (chat_id) REFERENCES chats (id) ON DELETE CASCADE,
    CONSTRAINT ucr_role_id_fkey FOREIGN KEY (role_id) REFERENCES chat_roles (id) ON DELETE CASCADE
);

